name: PR CI

on:
  pull_request:
    paths:
      - 'src/**'
      - '!**.md'

jobs:
  lint-format-unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: '~1.16'

      - name: lint
        run: |
          deno lint -c deno.config.json

      - name: check formatting
        run: |
          deno fmt -c deno.config.json --check

      - name: unit test
        run: |
          deno test -c deno.config.json -j --coverage=coverage_profile --no-check
          deno coverage -q --include="^file:.*/src/.*" coverage_profile

      - name: upload coverage_profile
        uses: actions/upload-artifact@v2
        with:
          name: coverage-profile
          path: ${{ github.workspace }}/coverage_profile

  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRESQL_FSYNC: false
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:6-alpine
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: '~1.16'
      - name: test connection to redis
        run: docker exec -i $(docker ps -f name=redis -q) redis-cli -a Test1234 KEYS *
      - name: run integration tests
        run: echo "testing testing... everything ok!"
